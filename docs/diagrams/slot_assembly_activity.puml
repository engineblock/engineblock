@startuml
title Construction Patterns for Activity Initialization

start

partition "construct dispensers (activity scope)" {
if (activity ISA
 ActionDispenserProvider?) then (yes)
 :activity
 .getActionDispenser(...);
else (no)
 :new
 CoreActionDispenser(...);
endif

if (activity ISA
 InputDispenserProvider?) then (yes)
 :activity
 .getInputDispensor(...);
else (no)
 :new
 CoreInputDispenser(...);
endif

if (activity ISA
 MotorDispenserProvider?) then (yes)
 :activity
 .getMotorDispenser(...);
else (no)
 :new
 CoreMotorDispenser(...);
endif

:return composed
 MotorDispenser(inputDispenser, actionDispenser);
}

partition "construct Motor (thread scope, by slot#)" {

 :return
 motorDispenser
 .getMotor(activityDef, slot#);

floating note right
  calls inputDispenser
  and activityDispenser
  internally, yielding
  a Runnable
end note
}

end
@enduml